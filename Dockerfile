# Использование официального образа Python в качестве базового
# Выбираем версию Python, совместимую с нашим проектом (например, 3.10-slim-buster)
FROM python:3.10-slim-buster

# Установка рабочей директории внутри контейнера
WORKDIR /app

# Копирование файла с зависимостями в рабочую директорию
# Это делается до копирования всего проекта, чтобы Docker мог кэшировать слои
# и пересобирать только при изменении requirements.txt.txt
COPY requirements.txt .

# Установка системных зависимостей, необходимых для psycopg2 (для PostgreSQL)
# и других возможных библиотек
RUN apt-get update && apt-get install -y \
    gcc \
    libpq-dev \
    musl-dev \
    && rm -rf /var/lib/apt/lists/*

# Установка Python-зависимостей
# Используем --no-cache-dir для уменьшения размера образа
RUN pip install --no-cache-dir -r requirements.txt

# Копирование всего кода приложения в рабочую директорию контейнера
# Точка '.' означает текущую директорию хоста, а вторая '.' - рабочую директорию контейнера
COPY . .

# Определение порта, который приложение будет использовать
# FastAPI по умолчанию работает на порту 8000
EXPOSE 8000

# Команда для запуска приложения с помощью Uvicorn
# --host 0.0.0.0 позволяет приложению слушать все сетевые интерфейсы внутри контейнера
# app.main:app предполагает, что твой FastAPI-приложение находится в файле main.py
# и переменная приложения называется 'app'. Если у тебя другой путь/название, измени.
CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]

